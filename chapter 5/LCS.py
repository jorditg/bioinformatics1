# -*- coding: utf-8 -*-
"""
Created on Wed Dec 11 11:39:47 2013

@author: jordi
"""
import sys 

def LCS(v,w):
    m =len(v)
    n = len(w)
    
    s = [[0 for i in range(n+1)] for j in range(m+1)]
    backtrack = [[0 for i in range(n+1)] for j in range(m+1)]
    
    for i in range(m+1):
        s[i][0] = 0
    for j in range(n+1):
        s[0][j] = 0
    
    for i in range(1,m+1):
        for j in range(1,n+1):
            if v[i-1] == w[j-1]:
                s[i][j] = max(s[i-1][j], s[i][j-1], s[i-1][j-1]+1)
            else:
                s[i][j] = max(s[i-1][j], s[i][j-1])                
            
            if s[i][j] == s[i-1][j]:
                # 2 equals down                
                backtrack[i][j] = 2
            elif s[i][j] == s[i][j-1]:
                # 1 equals right
                backtrack[i][j] = 1
            elif s[i][j] == (s[i-1][j-1] + 1):
                # 0 equals diagonal                
                backtrack[i][j] = 0
            #print s[i][j],
        #print
    return s[m][n], backtrack


def OutputLCS(backtrack, v, i, j):
    if i == 0 or j == 0:
        return
    if backtrack[i][j] == 2: # backtrack == down
        OutputLCS(backtrack,v,i-1,j)
    elif backtrack[i][j] == 1: # backtrack == right
        OutputLCS(backtrack,v,i,j-1)
    else:
        OutputLCS(backtrack,v,i-1,j-1)        
        print v[i-1],
     
sys.setrecursionlimit(2000)

v = "CAGGAGAACGTGGAAAGCCAAGTCTTGGCCAGTAGATACGAGGTGTAATGGAAAGACACTTGTTCCGAACCGCCGTGCTAACTGCGTCTTACTACAGATTTACGCGAACAGCAATCCCCAACCCAGCCGCAGACCCGATGTTTAGACGAGCCATCATATACCATCTTTTCCGGCGGTCTGCCCTCGCCGGTAAGGATGCACTCTGTCCAATCGGTCAACTAGCGACAATAGGTCAAGCAAATCGGGCGCAGTGTGGATCCCGAAATTAAAAATGTTTGACACATTCAGAAGCCAATGGGCACGCGTAGTCATTAACAAGTGCCGTCACTACGGGCGTTAGCTCTAAACGTTTGGAGTTGAAGTTAGCTCTCTTTACGTTTCGGACCCGACTATAGACCTATTGAGAAGAACGCTCGGAGACGTCTCTGGTCAGGACTTCCCGGAAAACGACCCTACTGCTTTGGGTAAGACGTATACGATCCATAGAAACGAGCAATGCAGCTTAATGGCTGCAGCGGACGTCCATGGCTTGGAACATTTATTTACGTGGTACTCCGAATATCGGTTTACTCGAATTGGCCCGGTCAATCCCTATGCATCAAGACCTGCTTGCATTCAATAACGTTGCACCATCGCAGGTGGATATCCTAGCATTTGGAAGGCTGACTAGTACCTTCATAACGGGCCTTGGAGCGACGAAAAGGACGCGAGCAACTTGCTCTGAATAACTCGTTAAACGCGTACCTAGTGGTCCTCTAGTGGCACCTTGATCCGAGCACTGTTATGGAATTATCGGTGCCACAGCCCGGGTAGCTTCTTCTGTGGGGAGCTTGCAACGCCAAAGGCAATGACAATGAGTCTCATCTATTAATCACGGACCTGATGATGGGTATACGATATTAAGGAGGCTCCAGGGGATGTAGGGGGC"
w = "GAACAACTGCCATGCTACCAGCACGACTACGTAATGGGCGATACGAGCTTGAGACCATTTAGGGATTCGGGGTGACCTCTACAACTTCAAAAGACTTAGTGGCCCTGGTGACAATGGCGTTGCGGCGCTGGAATGACATTTGCGCCTCTTAGTCCTAAACTGGATCGCCAGTGAACTTGAAAACGTGAAGCCATGTAACATGCTATTCCGGAACCGCACCTTTAGCAATGCTCCGCGGCCCTTACCAGTCTGAGCACCCGATAATAAGTCTGAAAGCGTAGGAACTAGGGCGAAGGCCCGCTAGGTTGTAATCAACCACTCAACAATTCAGAGTCGAGCGTACATACATCCCAGTTTTTGTCTAAGCCTCAATGGCCCCTTCTGGCTTGCCGCGTTTGCCGCGTTGTCTCTCATTATACTCTTCTTTGGAGCATGCTAGGAACCGCCTCACACTCTCTTTCAATCCAATTGGTGGAAAACCCATAAGTCGATGCCGTTTTGAACTCGGCGCATGACGAGTGAGATGGTTCTAGGGGTTGGAGAACAGAGAGTCGTCTGGTACCTTGAGGTGGTGAGTGTTCTTCCTGAACTAGAGTCTCGACAGCACTGTAAGAGTTCACCAGCTAGAACATTGTAGACCCGAGGTTCAACAGATAACCCAAAGTCATTTATGAAGTCCTGTTGGTGGGTAATCGGGATGCAGACCGTGTCTACATTACAGTGCTCGGTGGACCAAAGCGACAAACACGCAATGTTGAAACAGTTTTGACTATGGGTAGCTGGACTGGTCGCAGACTCCTGTCCGTGTCTTACAAGCAAGTACGGGGTAGAGTGTCAGCCGTCGGCCTTCCACTATCAGTGTATACCATCCGGACCCCCCTGGCAAGCCCGCAGGGTGTCAGGGGAGCCAGCAAGTAGAGCTAACATAT"

l, backtrack = LCS(v,w)
OutputLCS(backtrack, v, len(v), len(w))
